var accounts;
var account;
var AccountContract;
var AD;
window.App = {
  start: function() {
    var self = this;
    web3.eth.getAccounts(function(err, accs) {
      if (err != null) {
        alert("There was an error fetching your accounts.");
        return;
      }
      if (accs.length == 0) {
        alert("Couldn't get any accounts! Make sure your Ethereum client is configured correctly.");
        return;
      }

      accounts = accs;
      account = accounts[0];
      web3.eth.defaultAccount= account;
        AccountContract = web3.eth.contract([{"constant":false,"inputs":[{"name":"firstName","type":"string"},{"name":"SSN","type":"uint256"},{"name":"phoneNumber","type":"uint256"},{"name":"email","type":"string"},{"name":"specialty1","type":"string"},{"name":"address1","type":"string"},{"name":"currentStatus","type":"string"}],"name":"addNewDoctor","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"GetCount","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"CountNo","type":"uint8"},{"name":"phoneNumber","type":"uint256"},{"name":"address1","type":"string"},{"name":"currentStatus","type":"string"}],"name":"updateDoctor","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"CountNo","type":"uint8"}],"name":"getDoctor","outputs":[{"name":"","type":"string"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"string"},{"name":"","type":"string"},{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]);
        AD = ("60606040526000600160006101000a81548160ff021916908360ff160217905550341561002b57600080fd5b610d258061003a6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063083916b71461005e5780630ab93971146101d95780639a16ee7314610208578063f49a2051146102bd57600080fd5b341561006957600080fd5b6101d7600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061051a565b005b34156101e457600080fd5b6101ec610696565b604051808260ff1660ff16815260200191505060405180910390f35b341561021357600080fd5b6102bb600480803560ff1690602001909190803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506106ad565b005b34156102c857600080fd5b6102e1600480803560ff16906020019091905050610747565b60405180806020018881526020018781526020018060200180602001806020018060200186810386528d818151815260200191508051906020019080838360005b8381101561033d578082015181840152602081019050610322565b50505050905090810190601f16801561036a5780820380516001836020036101000a031916815260200191505b5086810385528a818151815260200191508051906020019080838360005b838110156103a3578082015181840152602081019050610388565b50505050905090810190601f1680156103d05780820380516001836020036101000a031916815260200191505b50868103845289818151815260200191508051906020019080838360005b838110156104095780820151818401526020810190506103ee565b50505050905090810190601f1680156104365780820380516001836020036101000a031916815260200191505b50868103835288818151815260200191508051906020019080838360005b8381101561046f578082015181840152602081019050610454565b50505050905090810190601f16801561049c5780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b838110156104d55780820151818401526020810190506104ba565b50505050905090810190601f1680156105025780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b610522610b41565b8781600001819052508681602001818152505085816040018181525050848160600181905250838160800181905250828160a00181905250818160c00181905250428160e0018181525050428161010001818152505080600080600160009054906101000a900460ff1660ff16815260200190815260200160002060008201518160000190805190602001906105b9929190610bac565b50602082015181600101556040820151816002015560608201518160030190805190602001906105ea929190610bac565b506080820151816004019080519060200190610607929190610bac565b5060a0820151816005019080519060200190610624929190610bac565b5060c0820151816006019080519060200190610641929190610bac565b5060e0820151816007015561010082015181600801559050506001600081819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550505050505050505050565b6000600160009054906101000a900460ff16905090565b826000808660ff16815260200190815260200160002060020181905550816000808660ff16815260200190815260200160002060050190805190602001906106f6929190610c2c565b50806000808660ff1681526020019081526020016000206006019080519060200190610723929190610c2c565b50426000808660ff1681526020019081526020016000206008018190555050505050565b61074f610cac565b60008061075a610cac565b610762610cac565b61076a610cac565b610772610cac565b6000808960ff1681526020019081526020016000206000016000808a60ff168152602001908152602001600020600101546000808b60ff168152602001908152602001600020600201546000808c60ff1681526020019081526020016000206003016000808d60ff1681526020019081526020016000206004016000808e60ff1681526020019081526020016000206005016000808f60ff168152602001908152602001600020600601868054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108b15780601f10610886576101008083540402835291602001916108b1565b820191906000526020600020905b81548152906001019060200180831161089457829003601f168201915b50505050509650838054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561094d5780601f106109225761010080835404028352916020019161094d565b820191906000526020600020905b81548152906001019060200180831161093057829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109e95780601f106109be576101008083540402835291602001916109e9565b820191906000526020600020905b8154815290600101906020018083116109cc57829003601f168201915b50505050509250818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b215780601f10610af657610100808354040283529160200191610b21565b820191906000526020600020905b815481529060010190602001808311610b0457829003601f168201915b505050505090509650965096509650965096509650919395979092949650565b61012060405190810160405280610b56610cc0565b81526020016000815260200160008152602001610b71610cc0565b8152602001610b7e610cc0565b8152602001610b8b610cc0565b8152602001610b98610cc0565b815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610bed57805160ff1916838001178555610c1b565b82800160010185558215610c1b579182015b82811115610c1a578251825591602001919060010190610bff565b5b509050610c289190610cd4565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c6d57805160ff1916838001178555610c9b565b82800160010185558215610c9b579182015b82811115610c9a578251825591602001919060010190610c7f565b5b509050610ca89190610cd4565b5090565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b610cf691905b80821115610cf2576000816000905550600101610cda565b5090565b905600a165627a7a72305820a49cd675307d2d59fb30119dd8f544a291739a160321177b541bc00dc1a79b7a0029");    
    });
  },
    createContract: function()
  {
    AccountContract.new("", {from:account, data: AD, gas: 3000000}, function (error, deployedContract){
      if(deployedContract.address)
      {
        document.getElementById("contractAddress").value=deployedContract.address;
      }
    })
  },
  addNewDoctor: function()
  {
    var contractAddress = document.getElementById("contractAddress").value;
    var deployedAccount = AccountContract.at(contractAddress);
    var firstName = document.getElementById("firstName").value;
    var SSN = document.getElementById("SSN").value;
	var phoneNumber = document.getElementById("phoneNumber").value;
    var specialty1 = document.getElementById("specialty1").value;  
	var address1 = document.getElementById("address1").value;
	var email = document.getElementById("email").value;
	var currentStatus = document.getElementById("currentStatus").value;	
    deployedAccount.addNewDoctor(firstName, SSN, phoneNumber,email, specialty1, address1,currentStatus, function(error, response){
    console.log(error);	
	document.getElementById("res").value = response;											 	 	  
    })
  }
    
};
window.addEventListener('load', function() {
  if (typeof web3 !== 'undefined') {
    console.warn("Using web3 detected from external source.  If using MetaMask, see the following link. Feel free to delete this warning. :) http://truffleframework.com/tutorials/truffle-and-metamask")
    window.web3 = new Web3(web3.currentProvider);
  } else {
    console.warn("No web3 detected. Falling back to http://localhost:8545. You should remove this fallback when you deploy live, as it's inherently insecure. Consider switching to Metamask for development. More info here: http://truffleframework.com/tutorials/truffle-and-metamask");
    // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)
    window.web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
  }
  App.start();
});
